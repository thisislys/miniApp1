{"version":3,"sources":["service/questionsManger.js","model/questionsType/index.js"],"names":["__webpack_require__","d","__webpack_exports__","getAllExamType","getAllQuestionsType","getAllSubject","addQuestions","getQusetions","updateQUestions","_utils_request__WEBPACK_IMPORTED_MODULE_0__","request","questionsInfo","method","body","payload","arr","i","push","concat","str","join","console","log","updated","initState","table","page","pageSize","total","data","isPersonalType","namespace","state","reducers","changeTable","action","Object","_Users_liuyu_react_exam_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","effects","fetch","_Users_liuyu_react_exam_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_ref","_ref2","call","put","params","response","wrap","_context","prev","next","sent","type","stop","this"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAA,IAAAC,EAAAT,EAAA,GAEO,SAASG,IACZ,OAAOO,YAAQ,kBAGZ,SAASN,IACZ,OAAOM,YAAQ,0BAGZ,SAASL,IACZ,OAAOK,YAAQ,iBAGZ,SAASJ,EAAaK,GACzB,OAAOD,YAAQ,kBAAkB,CAC7BE,OAAO,OACPC,KAAKF,IAIN,SAASJ,EAAaO,GACzB,IAAIC,EAAM,GACV,IAAI,IAAIC,KAAKF,EACLA,EAAQE,IACRD,EAAIE,KAAJ,GAAAC,OAAYF,EAAZ,KAAAE,OAAiBJ,EAAQE,KAGjC,IAAIG,EAAM,IAAIJ,EAAIK,KAAK,KAEvB,OADAC,QAAQC,IAAIH,GACLT,YAAO,4BAAAQ,OAA6BC,IAKxC,SAASX,EAAgBe,GAC5B,OAAOb,YAAQ,yBAAyB,CACpCE,OAAO,MACPC,KAAKU,oFCpCPC,EAAY,CAChBC,MAAO,CACLC,KAAM,EACNC,SAAU,GACVC,MAAO,EACPC,KAAM,IAERC,eAAgB,MAIlB5B,EAAA,SACE6B,UAAW,gBAEXC,MAAOR,EAEPS,SAAU,CACRC,YADQ,SACIF,EAAOG,GACjB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEP,MAAMW,OAAAC,EAAA,EAAAD,CAAA,GACDJ,EAAMP,MACNU,EAAOrB,aAMlBwB,QAAS,CACNC,MADMC,EAAAC,EAAAC,KAAA,SAAAH,EAAAI,EAAAC,GAAA,IAAA9B,EAAA+B,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOY,OANVtC,EADF6B,EACE7B,QAAW+B,EADbD,EACaC,KAAMC,EADnBF,EACmBE,IAClBC,EAFDX,OAAAC,EAAA,EAAAD,CAAA,CAGHV,KAAMF,EAAUC,MAAMC,KACtBC,SAAUH,EAAUC,MAAME,UACvBb,GALAoC,EAAAE,KAAA,EAOkBP,EAAKzC,IAAqB2C,GAP5C,OAQL,OADMC,EAPDE,EAAAG,KAAAH,EAAAE,KAAA,EAQCN,EAAI,CACRQ,KAAM,cACNxC,QAAS,CACPe,KAAMmB,EAASnB,QAXd,wBAAAqB,EAAAK,SAAAhB,EAAAiB","file":"static/js/19.ad9563c4.chunk.js","sourcesContent":["import request from '../utils/request'\n// 获取所有的考试类型\nexport function getAllExamType(){\n    return request('/exam/examType');\n}\n// 获取所有的试题类型\nexport function getAllQuestionsType(){\n    return request('/exam/getQuestionsType');\n}\n// 获取所有的课程\nexport function getAllSubject(){\n    return request('/exam/subject');\n}\n// 添加试题\nexport function addQuestions(questionsInfo){\n    return request('/exam/questions',{\n        method:'POST',\n        body:questionsInfo,\n    });\n}\n// 获取试题\nexport function getQusetions(payload){\n    let arr = [];\n    for(let i in payload){\n        if (payload[i]) {\n            arr.push(`${i}=${payload[i]}`);\n        }\n    }\n    let str = '?'+arr.join('&');\n    console.log(str)\n    return request(`/exam/questions/condition${str}`);\n}\n\n// 更新试题\n\nexport function updateQUestions(updated){\n    return request('/exam/questions/update',{\n        method:'PUT',\n        body:updated\n    });\n}","import {getAllQuestionsType} from '@/service/questionsManger'\n\nconst initState = {\n  table: {\n    page: 1,\n    pageSize: 10,\n    total: 0,\n    data: [],\n  },\n  isPersonalType: null,\n};\n\n\nexport default {\n  namespace: 'questionsType',\n\n  state: initState,\n\n  reducers: {\n    changeTable(state, action) {\n      return {\n        ...state,\n        table: {\n          ...state.table,\n          ...action.payload,\n        },\n      };\n    }\n  },\n\n  effects: {\n    *fetch ({payload}, {call, put}) {\n      const params = {\n        page: initState.table.page,\n        pageSize: initState.table.pageSize,\n        ...payload\n      };\n      const response = yield call(getAllQuestionsType, params);\n      yield put({\n        type: 'changeTable',\n        payload: {\n          data: response.data\n        }\n      })\n    },\n  }\n}"],"sourceRoot":""}