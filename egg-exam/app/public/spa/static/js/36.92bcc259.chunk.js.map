{"version":3,"sources":["service/questionsManger.js","service/examManger.js","model/examList/index.js"],"names":["__webpack_require__","d","__webpack_exports__","getAllExamType","getAllQuestionsType","getAllSubject","addQuestions","getQusetions","updateQUestions","_utils_request__WEBPACK_IMPORTED_MODULE_0__","request","questionsInfo","method","body","payload","arr","i","push","concat","str","join","console","log","updated","getVlueateList","createExam","updateExam","getExamList","getExamDetail","studentPaper","correction","_ref","grade_id","examInfo","_ref2","id","question_ids","exam_id","paper_id","_ref3","score","requestData","Promise","all","namespace","state","examType","questionsType","subject","examList","reducers","initData","Object","_Users_liuyu_react_exam_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","effects","_Users_liuyu_react_exam_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","action","call","put","result","keys","wrap","_context","prev","next","sent","forEach","item","key","data","type","stop","this","end_time","start_time","subject_id","_context2","actions","_ref4","_context3","exam"],"mappings":"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","file":"static/js/36.92bcc259.chunk.js","sourcesContent":["import request from '../utils/request'\n// 获取所有的考试类型\nexport function getAllExamType(){\n    return request('/exam/examType');\n}\n// 获取所有的试题类型\nexport function getAllQuestionsType(){\n    return request('/exam/getQuestionsType');\n}\n// 获取所有的课程\nexport function getAllSubject(){\n    return request('/exam/subject');\n}\n// 添加试题\nexport function addQuestions(questionsInfo){\n    return request('/exam/questions',{\n        method:'POST',\n        body:questionsInfo,\n    });\n}\n// 获取试题\nexport function getQusetions(payload){\n    let arr = [];\n    for(let i in payload){\n        if (payload[i]) {\n            arr.push(`${i}=${payload[i]}`);\n        }\n    }\n    let str = '?'+arr.join('&');\n    console.log(str)\n    return request(`/exam/questions/condition${str}`);\n}\n\n// 更新试题\n\nexport function updateQUestions(updated){\n    return request('/exam/questions/update',{\n        method:'PUT',\n        body:updated\n    });\n}","import request from '../utils/request'\n\n// 试卷列表\nexport function getVlueateList({ grade_id }) {\n  console.log(grade_id)\n  return request('/exam/student?grade_id=' + grade_id);\n}\n\nexport function createExam(examInfo) {\n  return request('/exam/exam', {\n    method: 'POST',\n    body: examInfo,\n  });\n}\n\nexport function updateExam({ id, question_ids }) {\n  return request('/exam/exam/' + id, {\n    method: 'PUT',\n    body: { question_ids: question_ids },\n  });\n}\n\nexport function getExamList(examInfo) {\n  return request('/exam/exam', {\n    method: 'GET'\n  });\n}\n\nexport function getExamDetail(exam_id) {\n  return request('/exam/exam/' + exam_id, {\n    method: 'GET'\n  });\n}\n\nexport function studentPaper(paper_id) {\n  return request('/exam/student/' + paper_id, {\n    method: 'GET'\n  });\n}\n\nexport function correction({ paper_id, score }) {\n  return request('/exam/student/' + paper_id, {\n    method: 'PUT',\n    body: {\n      score\n    }\n  });\n}","import { getAllExamType, getAllQuestionsType, getAllSubject } from '@/service/questionsManger'\nimport { createExam, getExamList } from '@/service/examManger'\n\nconst requestData = () => {\n  return Promise.all([\n    getAllExamType(),\n    getAllQuestionsType(),\n    getAllSubject()\n  ]);\n}\n\nconst initState = {\n  examType:[],\n  questionsType:[],\n  subject:[],\n  examList: []\n};\n\n\nexport default {\n  namespace: 'examList',\n\n  state: initState,\n\n  reducers: {\n    initData (state, payload) { // 初始化数据\n      return {...state, ...payload}\n    }\n  },\n\n  effects: {\n    *requestData (action, {call, put}) {\n      let result = yield call(requestData);\n      let keys = ['examType','questionsType','subject'];\n      let payload = {};\n      result.forEach((item,key)=>{\n          if(item){\n              payload[keys[key]] = item.data;\n          }\n      });\n      console.log(payload)\n      yield put({type:'initData',...payload});\n    },\n\n    *createExam ({end_time, exam_id, start_time, subject_id}, {call, put}) {\n      yield call(createExam, {\n        end_time, exam_id, start_time, subject_id\n      })\n    },\n\n    *examList (actions, {call, put}) {\n      let result = yield call(getExamList)\n      yield put({type:'initData', examList: result.exam});\n    }\n  }\n}"],"sourceRoot":""}