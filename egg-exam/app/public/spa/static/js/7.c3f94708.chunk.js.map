{"version":3,"sources":["service/questManger.js","service/examManger.js","model/examValueate/index.js"],"names":["__webpack_require__","d","__webpack_exports__","getAllGradeMsg","getOtherGrade","getAllRoom","addGrade","delGrade","editGrade","addRoom","delRoom","getAllStudents","getOtherStudents","delStudent","_utils_request__WEBPACK_IMPORTED_MODULE_0__","request","payload","method","body","_ref","student_id","concat","getVlueateList","createExam","updateExam","getExamList","getExamDetail","studentPaper","correction","grade_id","console","log","examInfo","_ref2","id","question_ids","exam_id","paper_id","_ref3","score","requestData","Promise","all","namespace","state","paper_detal","gradeList","valueateList","reducers","changeState","Object","_Users_liuyu_react_exam_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","effects","_Users_liuyu_react_exam_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","call","put","result","wrap","_context","prev","next","sent","type","data","stop","this","_ref4","_context2","abrupt","resolve","action","_ref5","keys","_context3","forEach","item","key","evalueate","_ref6","_ref7","gradeId","_context4","exam"],"mappings":"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","file":"static/js/7.c3f94708.chunk.js","sourcesContent":["import request from '../utils/request'\n\n// 获取所有班级信息\nexport const getAllGradeMsg = () => {\n    return request('/manger/grade')\n}\n\nexport const getOtherGrade = () => {\n    return request('/manger/grade/new')\n}\n\nexport const getAllRoom = () => {\n    return request('/manger/room')\n}\n\nexport const addGrade = (payload) => {\n    return request('/manger/grade', {\n        method:'POST',\n        body:payload\n    })\n}\n\nexport const delGrade = (payload) => {\n    return request('/manger/grade/delete', {\n        method:'DELETE',\n        body:payload\n    })\n}\n\nexport const editGrade = (payload) => {\n    return request('/manger/grade/update', {\n        method: 'PUT',\n        body: payload\n    })\n}\n\n\nexport const addRoom = (payload) => {\n    return request('/manger/room', {\n        method: 'POST',\n        body: payload\n    })\n}\n\n\n//删除教室\nexport const delRoom = (payload) => {\n    return request('/manger/room/delete', {\n        method: 'DELETE',\n        body: payload\n    })\n}\n\n// 获取学生信息\nexport const getAllStudents = () => {\n    return request('/manger/student')\n}\n\nexport const getOtherStudents = () => {\n    return request('/manger/student/new')\n}\n\n\nexport const delStudent = ({student_id}) => {\n    return request(`/manger/student/${student_id}`, {\n        method: 'DELETE'\n    })\n}\n\n","import request from '../utils/request'\n\n// 试卷列表\nexport function getVlueateList({ grade_id }) {\n  console.log(grade_id)\n  return request('/exam/student?grade_id=' + grade_id);\n}\n\nexport function createExam(examInfo) {\n  return request('/exam/exam', {\n    method: 'POST',\n    body: examInfo,\n  });\n}\n\nexport function updateExam({ id, question_ids }) {\n  return request('/exam/exam/' + id, {\n    method: 'PUT',\n    body: { question_ids: question_ids },\n  });\n}\n\nexport function getExamList(examInfo) {\n  return request('/exam/exam', {\n    method: 'GET'\n  });\n}\n\nexport function getExamDetail(exam_id) {\n  return request('/exam/exam/' + exam_id, {\n    method: 'GET'\n  });\n}\n\nexport function studentPaper(paper_id) {\n  return request('/exam/student/' + paper_id, {\n    method: 'GET'\n  });\n}\n\nexport function correction({ paper_id, score }) {\n  return request('/exam/student/' + paper_id, {\n    method: 'PUT',\n    body: {\n      score\n    }\n  });\n}","import { studentPaper, correction, getVlueateList } from '@/service/examManger'\nimport { getAllGradeMsg } from '@/service/questManger'\n\n\nconst requestData = () => {\n  return Promise.all([\n    //获取班级列表\n    getAllGradeMsg()\n  ]);\n}\n\nconst initState = {\n  paper_detal: {},\n  gradeList: [],\n  valueateList: []\n};\n\n\nexport default {\n  namespace: 'examValueate',\n\n  state: initState,\n\n  reducers: {\n    changeState(state, payload) {\n      return { ...state, ...payload }\n    }\n  },\n  effects: {\n    *studentPaper({ paper_id }, { call, put }) {\n      let result = yield call(studentPaper, paper_id)\n      yield put({ type: 'changeState', paper_detal: result.data })\n    },\n\n    *correction({ paper_id, score }, { call }) {\n      let result = yield call(correction, { paper_id, score })\n      return Promise.resolve(result)\n    },\n\n    *requestData(action, { call, put }) {\n      let result = yield call(requestData);\n      let keys = ['gradeList'];\n      let payload = {};\n      result.forEach((item, key) => {\n        if (item) {\n          payload[keys[key]] = item.data;\n        }\n      });\n\n      yield put({ type: 'changeState', ...payload });\n    },\n\n    *evalueate({ gradeId }, { call, put }) {\n      let result = yield call(getVlueateList, { grade_id: gradeId });\n      yield put({ type: 'changeState', valueateList: result.exam });\n    }\n  }\n}"],"sourceRoot":""}