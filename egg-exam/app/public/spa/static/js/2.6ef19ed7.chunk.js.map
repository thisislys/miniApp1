{"version":3,"sources":["../node_modules/shallowequal/index.js","../node_modules/dom-scroll-into-view/lib/index.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/dom-scroll-into-view/lib/dom-scroll-into-view.js","../node_modules/dom-scroll-into-view/lib/util.js"],"names":["module","exports","objA","objB","compare","compareContext","ret","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB","__webpack_require__","global","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","this","__entries__","defineProperty","get","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","isBrowser","window","document","global$1","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","__webpack_exports__","util","elem","container","config","nodeType","getWindow","allowHorizontalScroll","onlyScrollIfNeeded","alignWithTop","alignWithLeft","offsetTop","offsetLeft","offsetBottom","offsetRight","undefined","isWin","isWindow","elemOffset","offset","eh","outerHeight","ew","outerWidth","containerOffset","ch","cw","containerScroll","diffTop","diffBottom","win","winScroll","ww","wh","scrollLeft","scrollTop","css","_extends","assign","i","source","_typeof","Symbol","iterator","obj","constructor","getScroll","w","d","body","getScrollLeft","getScrollTop","getOffset","el","pos","box","doc","docElem","getBoundingClientRect","clientLeft","clientTop","getClientPosition","parentWindow","_RE_NUM_NO_PX","RegExp","RE_POS","CURRENT_STYLE","RUNTIME_STYLE","LEFT","PX","getComputedStyleX","each","fn","isBorderBoxFn","name","computedStyle_","val","computedStyle","getPropertyValue","test","style","rsLeft","pixelLeft","BOX_MODELS","CONTENT_INDEX","PADDING_INDEX","BORDER_INDEX","getPBMWidth","which","prop","j","cssProp","domUtils","getWH","extra","viewportWidth","viewportHeight","docWidth","docHeight","borderBoxValue","offsetWidth","offsetHeight","isBorderBox","cssBoxValue","Number","borderBoxValueOrIsBorderBox","padding","slice","refWin","max","documentElementProp","compatMode","cssShow","visibility","display","getWHIgnoreDisplay","args","options","old","swap","v","first","charAt","toUpperCase","includeMargin","node","current","setOffset","clone","overflow","scrollTo"],"mappings":"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","file":"static/js/2.6ef19ed7.chunk.js","sourcesContent":["//\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB); // Test for A's keys different from B.\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || ret === void 0 && valueA !== valueB) {\n      return false;\n    }\n  }\n\n  return true;\n};","'use strict';\n\nmodule.exports = require('./dom-scroll-into-view');","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;","'use strict';\n\nvar util = require('./util');\n\nfunction scrollIntoView(elem, container, config) {\n  config = config || {}; // document 归一化到 window\n\n  if (container.nodeType === 9) {\n    container = util.getWindow(container);\n  }\n\n  var allowHorizontalScroll = config.allowHorizontalScroll;\n  var onlyScrollIfNeeded = config.onlyScrollIfNeeded;\n  var alignWithTop = config.alignWithTop;\n  var alignWithLeft = config.alignWithLeft;\n  var offsetTop = config.offsetTop || 0;\n  var offsetLeft = config.offsetLeft || 0;\n  var offsetBottom = config.offsetBottom || 0;\n  var offsetRight = config.offsetRight || 0;\n  allowHorizontalScroll = allowHorizontalScroll === undefined ? true : allowHorizontalScroll;\n  var isWin = util.isWindow(container);\n  var elemOffset = util.offset(elem);\n  var eh = util.outerHeight(elem);\n  var ew = util.outerWidth(elem);\n  var containerOffset = undefined;\n  var ch = undefined;\n  var cw = undefined;\n  var containerScroll = undefined;\n  var diffTop = undefined;\n  var diffBottom = undefined;\n  var win = undefined;\n  var winScroll = undefined;\n  var ww = undefined;\n  var wh = undefined;\n\n  if (isWin) {\n    win = container;\n    wh = util.height(win);\n    ww = util.width(win);\n    winScroll = {\n      left: util.scrollLeft(win),\n      top: util.scrollTop(win)\n    }; // elem 相对 container 可视视窗的距离\n\n    diffTop = {\n      left: elemOffset.left - winScroll.left - offsetLeft,\n      top: elemOffset.top - winScroll.top - offsetTop\n    };\n    diffBottom = {\n      left: elemOffset.left + ew - (winScroll.left + ww) + offsetRight,\n      top: elemOffset.top + eh - (winScroll.top + wh) + offsetBottom\n    };\n    containerScroll = winScroll;\n  } else {\n    containerOffset = util.offset(container);\n    ch = container.clientHeight;\n    cw = container.clientWidth;\n    containerScroll = {\n      left: container.scrollLeft,\n      top: container.scrollTop\n    }; // elem 相对 container 可视视窗的距离\n    // 注意边框, offset 是边框到根节点\n\n    diffTop = {\n      left: elemOffset.left - (containerOffset.left + (parseFloat(util.css(container, 'borderLeftWidth')) || 0)) - offsetLeft,\n      top: elemOffset.top - (containerOffset.top + (parseFloat(util.css(container, 'borderTopWidth')) || 0)) - offsetTop\n    };\n    diffBottom = {\n      left: elemOffset.left + ew - (containerOffset.left + cw + (parseFloat(util.css(container, 'borderRightWidth')) || 0)) + offsetRight,\n      top: elemOffset.top + eh - (containerOffset.top + ch + (parseFloat(util.css(container, 'borderBottomWidth')) || 0)) + offsetBottom\n    };\n  }\n\n  if (diffTop.top < 0 || diffBottom.top > 0) {\n    // 强制向上\n    if (alignWithTop === true) {\n      util.scrollTop(container, containerScroll.top + diffTop.top);\n    } else if (alignWithTop === false) {\n      util.scrollTop(container, containerScroll.top + diffBottom.top);\n    } else {\n      // 自动调整\n      if (diffTop.top < 0) {\n        util.scrollTop(container, containerScroll.top + diffTop.top);\n      } else {\n        util.scrollTop(container, containerScroll.top + diffBottom.top);\n      }\n    }\n  } else {\n    if (!onlyScrollIfNeeded) {\n      alignWithTop = alignWithTop === undefined ? true : !!alignWithTop;\n\n      if (alignWithTop) {\n        util.scrollTop(container, containerScroll.top + diffTop.top);\n      } else {\n        util.scrollTop(container, containerScroll.top + diffBottom.top);\n      }\n    }\n  }\n\n  if (allowHorizontalScroll) {\n    if (diffTop.left < 0 || diffBottom.left > 0) {\n      // 强制向上\n      if (alignWithLeft === true) {\n        util.scrollLeft(container, containerScroll.left + diffTop.left);\n      } else if (alignWithLeft === false) {\n        util.scrollLeft(container, containerScroll.left + diffBottom.left);\n      } else {\n        // 自动调整\n        if (diffTop.left < 0) {\n          util.scrollLeft(container, containerScroll.left + diffTop.left);\n        } else {\n          util.scrollLeft(container, containerScroll.left + diffBottom.left);\n        }\n      }\n    } else {\n      if (!onlyScrollIfNeeded) {\n        alignWithLeft = alignWithLeft === undefined ? true : !!alignWithLeft;\n\n        if (alignWithLeft) {\n          util.scrollLeft(container, containerScroll.left + diffTop.left);\n        } else {\n          util.scrollLeft(container, containerScroll.left + diffBottom.left);\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = scrollIntoView;","'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nvar RE_NUM = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source;\n\nfunction getClientPosition(elem) {\n  var box = undefined;\n  var x = undefined;\n  var y = undefined;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement; // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式\n\n  box = elem.getBoundingClientRect(); // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop\n  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确\n  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin\n\n  x = box.left;\n  y = box.top; // In IE, most of the time, 2 extra pixels are added to the top and left\n  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and\n  // IE6 standards mode, this border can be overridden by setting the\n  // document element's border to zero -- thus, we cannot rely on the\n  // offset always being 2 pixels.\n  // In quirks mode, the offset can be determined by querying the body's\n  // clientLeft/clientTop, but in standards mode, it is found by querying\n  // the document element's clientLeft/clientTop.  Since we already called\n  // getClientBoundingRect we have already forced a reflow, so it is not\n  // too expensive just to query them all.\n  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的\n  // 窗口边框标准是设 documentElement ,quirks 时设置 body\n  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去\n  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置\n  // 标准 ie 下 docElem.clientTop 就是 border-top\n  // ie7 html 即窗口边框改变不了。永远为 2\n  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0\n\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  return {\n    left: x,\n    top: y\n  };\n}\n\nfunction getScroll(w, top) {\n  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];\n  var method = 'scroll' + (top ? 'Top' : 'Left');\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction getScrollLeft(w) {\n  return getScroll(w);\n}\n\nfunction getScrollTop(w) {\n  return getScroll(w, true);\n}\n\nfunction getOffset(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument;\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScrollLeft(w);\n  pos.top += getScrollTop(w);\n  return pos;\n}\n\nfunction _getComputedStyle(elem, name, computedStyle_) {\n  var val = '';\n  var d = elem.ownerDocument;\n  var computedStyle = computedStyle_ || d.defaultView.getComputedStyle(elem, null); // https://github.com/kissyteam/kissy/issues/61\n\n  if (computedStyle) {\n    val = computedStyle.getPropertyValue(name) || computedStyle[name];\n  }\n\n  return val;\n}\n\nvar _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');\n\nvar RE_POS = /^(top|right|bottom|left)$/;\nvar CURRENT_STYLE = 'currentStyle';\nvar RUNTIME_STYLE = 'runtimeStyle';\nvar LEFT = 'left';\nvar PX = 'px';\n\nfunction _getComputedStyleIE(elem, name) {\n  // currentStyle maybe null\n  // http://msdn.microsoft.com/en-us/library/ms535231.aspx\n  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name]; // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值\n  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19\n  // 在 ie 下不对，需要直接用 offset 方式\n  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了\n  // From the awesome hack by Dean Edwards\n  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n  // If we're not dealing with a regular pixel number\n  // but a number that has a weird ending, we need to convert it to pixels\n  // exclude left right for relativity\n\n  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {\n    // Remember the original values\n    var style = elem.style;\n    var left = style[LEFT];\n    var rsLeft = elem[RUNTIME_STYLE][LEFT]; // prevent flashing of content\n\n    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT]; // Put in the new values to get a computed value out\n\n    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;\n    ret = style.pixelLeft + PX; // Revert the changed values\n\n    style[LEFT] = left;\n    elem[RUNTIME_STYLE][LEFT] = rsLeft;\n  }\n\n  return ret === '' ? 'auto' : ret;\n}\n\nvar getComputedStyleX = undefined;\n\nif (typeof window !== 'undefined') {\n  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;\n}\n\nfunction each(arr, fn) {\n  for (var i = 0; i < arr.length; i++) {\n    fn(arr[i]);\n  }\n}\n\nfunction isBorderBoxFn(elem) {\n  return getComputedStyleX(elem, 'boxSizing') === 'border-box';\n}\n\nvar BOX_MODELS = ['margin', 'border', 'padding'];\nvar CONTENT_INDEX = -1;\nvar PADDING_INDEX = 2;\nvar BORDER_INDEX = 1;\nvar MARGIN_INDEX = 0;\n\nfunction swap(elem, options, callback) {\n  var old = {};\n  var style = elem.style;\n  var name = undefined; // Remember the old values, and insert the new ones\n\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      old[name] = style[name];\n      style[name] = options[name];\n    }\n  }\n\n  callback.call(elem); // Revert the old values\n\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      style[name] = old[name];\n    }\n  }\n}\n\nfunction getPBMWidth(elem, props, which) {\n  var value = 0;\n  var prop = undefined;\n  var j = undefined;\n  var i = undefined;\n\n  for (j = 0; j < props.length; j++) {\n    prop = props[j];\n\n    if (prop) {\n      for (i = 0; i < which.length; i++) {\n        var cssProp = undefined;\n\n        if (prop === 'border') {\n          cssProp = prop + which[i] + 'Width';\n        } else {\n          cssProp = prop + which[i];\n        }\n\n        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;\n      }\n    }\n  }\n\n  return value;\n}\n/**\n * A crude way of determining if an object is a window\n * @member util\n */\n\n\nfunction isWindow(obj) {\n  // must use == for ie8\n\n  /* eslint eqeqeq:0 */\n  return obj != null && obj == obj.window;\n}\n\nvar domUtils = {};\neach(['Width', 'Height'], function (name) {\n  domUtils['doc' + name] = function (refWin) {\n    var d = refWin.document;\n    return Math.max( // firefox chrome documentElement.scrollHeight< body.scrollHeight\n    // ie standard mode : documentElement.scrollHeight> body.scrollHeight\n    d.documentElement['scroll' + name], // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？\n    d.body['scroll' + name], domUtils['viewport' + name](d));\n  };\n\n  domUtils['viewport' + name] = function (win) {\n    // pc browser includes scrollbar in window.innerWidth\n    var prop = 'client' + name;\n    var doc = win.document;\n    var body = doc.body;\n    var documentElement = doc.documentElement;\n    var documentElementProp = documentElement[prop]; // 标准模式取 documentElement\n    // backcompat 取 body\n\n    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;\n  };\n});\n/*\n 得到元素的大小信息\n @param elem\n @param name\n @param {String} [extra]  'padding' : (css width) + padding\n 'border' : (css width) + padding + border\n 'margin' : (css width) + padding + border + margin\n */\n\nfunction getWH(elem, name, extra) {\n  if (isWindow(elem)) {\n    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);\n  } else if (elem.nodeType === 9) {\n    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);\n  }\n\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n  var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;\n  var computedStyle = getComputedStyleX(elem);\n  var isBorderBox = isBorderBoxFn(elem, computedStyle);\n  var cssBoxValue = 0;\n\n  if (borderBoxValue == null || borderBoxValue <= 0) {\n    borderBoxValue = undefined; // Fall back to computed then un computed css if necessary\n\n    cssBoxValue = getComputedStyleX(elem, name);\n\n    if (cssBoxValue == null || Number(cssBoxValue) < 0) {\n      cssBoxValue = elem.style[name] || 0;\n    } // Normalize '', auto, and prepare for extra\n\n\n    cssBoxValue = parseFloat(cssBoxValue) || 0;\n  }\n\n  if (extra === undefined) {\n    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;\n  }\n\n  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;\n  var val = borderBoxValue || cssBoxValue;\n\n  if (extra === CONTENT_INDEX) {\n    if (borderBoxValueOrIsBorderBox) {\n      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);\n    }\n\n    return cssBoxValue;\n  }\n\n  if (borderBoxValueOrIsBorderBox) {\n    var padding = extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle);\n    return val + (extra === BORDER_INDEX ? 0 : padding);\n  }\n\n  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);\n}\n\nvar cssShow = {\n  position: 'absolute',\n  visibility: 'hidden',\n  display: 'block'\n}; // fix #119 : https://github.com/kissyteam/kissy/issues/119\n\nfunction getWHIgnoreDisplay(elem) {\n  var val = undefined;\n  var args = arguments; // in case elem is window\n  // elem.offsetWidth === undefined\n\n  if (elem.offsetWidth !== 0) {\n    val = getWH.apply(undefined, args);\n  } else {\n    swap(elem, cssShow, function () {\n      val = getWH.apply(undefined, args);\n    });\n  }\n\n  return val;\n}\n\nfunction css(el, name, v) {\n  var value = v;\n\n  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {\n    for (var i in name) {\n      if (name.hasOwnProperty(i)) {\n        css(el, i, name[i]);\n      }\n    }\n\n    return undefined;\n  }\n\n  if (typeof value !== 'undefined') {\n    if (typeof value === 'number') {\n      value += 'px';\n    }\n\n    el.style[name] = value;\n    return undefined;\n  }\n\n  return getComputedStyleX(el, name);\n}\n\neach(['width', 'height'], function (name) {\n  var first = name.charAt(0).toUpperCase() + name.slice(1);\n\n  domUtils['outer' + first] = function (el, includeMargin) {\n    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);\n  };\n\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n\n  domUtils[name] = function (elem, val) {\n    if (val !== undefined) {\n      if (elem) {\n        var computedStyle = getComputedStyleX(elem);\n        var isBorderBox = isBorderBoxFn(elem);\n\n        if (isBorderBox) {\n          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);\n        }\n\n        return css(elem, name, val);\n      }\n\n      return undefined;\n    }\n\n    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);\n  };\n}); // 设置 elem 相对 elem.ownerDocument 的坐标\n\nfunction setOffset(elem, offset) {\n  // set position first, in-case top/left are set even on static elem\n  if (css(elem, 'position') === 'static') {\n    elem.style.position = 'relative';\n  }\n\n  var old = getOffset(elem);\n  var ret = {};\n  var current = undefined;\n  var key = undefined;\n\n  for (key in offset) {\n    if (offset.hasOwnProperty(key)) {\n      current = parseFloat(css(elem, key)) || 0;\n      ret[key] = current + offset[key] - old[key];\n    }\n  }\n\n  css(elem, ret);\n}\n\nmodule.exports = _extends({\n  getWindow: function getWindow(node) {\n    var doc = node.ownerDocument || node;\n    return doc.defaultView || doc.parentWindow;\n  },\n  offset: function offset(el, value) {\n    if (typeof value !== 'undefined') {\n      setOffset(el, value);\n    } else {\n      return getOffset(el);\n    }\n  },\n  isWindow: isWindow,\n  each: each,\n  css: css,\n  clone: function clone(obj) {\n    var ret = {};\n\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ret[i] = obj[i];\n      }\n    }\n\n    var overflow = obj.overflow;\n\n    if (overflow) {\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ret.overflow[i] = obj.overflow[i];\n        }\n      }\n    }\n\n    return ret;\n  },\n  scrollLeft: function scrollLeft(w, v) {\n    if (isWindow(w)) {\n      if (v === undefined) {\n        return getScrollLeft(w);\n      }\n\n      window.scrollTo(v, getScrollTop(w));\n    } else {\n      if (v === undefined) {\n        return w.scrollLeft;\n      }\n\n      w.scrollLeft = v;\n    }\n  },\n  scrollTop: function scrollTop(w, v) {\n    if (isWindow(w)) {\n      if (v === undefined) {\n        return getScrollTop(w);\n      }\n\n      window.scrollTo(getScrollLeft(w), v);\n    } else {\n      if (v === undefined) {\n        return w.scrollTop;\n      }\n\n      w.scrollTop = v;\n    }\n  },\n  viewportWidth: 0,\n  viewportHeight: 0\n}, domUtils);"],"sourceRoot":""}